******************  SPIRAL MATRIX **********
class Solution {
    public int[][] generateMatrix(int n) {
        int x = 1,cnt = 0;
        int[][] ans = new int[n][n];
        int[][] visited = new int[n][n];
        int i = 0,j = 0,k = 0;
        while(cnt < (n * n)){
            if(visited[i][j] == 0){
                ans[i][j] = x++;
                visited[i][j] = 1;
                if(i == k && j < n - 1 - k) j++;
                else if(j == n - 1 - k && i < n - 1 - k) i++;
                else if(i == n - 1 - k && j <= n - 1 - k && j != k) j--;
                else if(i <= n - 1 - k && j == k) i--;
                cnt++;
            }else{ 
                k++;
                i++;
                j++;
            }
        }
        return ans;
    }
}

***********SOLVING QUESTION WITH BRAIN POWER ************

class Solution {
    public long mostPoints(int[][] questions) {
     int s=questions.length;
     long[] dp = new long[s];
     dp[s-1]=questions[s-1][0];
     for(int i=s-2;i>=0;i--){
         int nqp = i+questions[i][1]+1;//next question position
         dp[i] = Math.max(questions[i][0]+(nqp>=s ? 0:dp[nqp]),dp[i+1]);
     }
     return dp[0];
    }
}
